// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Matches shallow shapshot 1`] = `
<div
  className="src-shared-components-Content-___style__container___kZF98"
>
  <div
    className="src-shared-components-Content-___style__build-timestamp___2PJGW"
  >
    Build Timestamp: 
    Wed, 29 Nov 2017 07:40:00 GMT
  </div>
  <h1>
    Topcoder Community App
  </h1>
  <p>
    Isomorphic ReactJS App for new version of Topcoder community website. Technological stack includes:
  </p>
  <ul>
    <li>
      Autoprefixer;
    </li>
    <li>
      Babel with latest JS standard support both client- and server-side;
    </li>
    <li>
      ESlint (AirBnB style, run with 
      <code>
        $ npm run lint:js
      </code>
      );
    </li>
    <li>
      ExpressJS server;
    </li>
    <li>
      Font loading (Roboto fonts are included into the repo);
    </li>
    <li>
      General Topcoder styles (check 
      <code>
        /src/styles
      </code>
      );
    </li>
    <li>
      Hot reload of JS code and SCSS styles in dev environment (start it with 
      <code>
        $ npm run dev
      </code>
      );
    </li>
    <li>
      Loading of .svg assets as ReactJS components with 
      <code>
        babel-plugin-inline-react-svg
      </code>
      ;
    </li>
    <li>
      ReactJS;
    </li>
    <li>
      React CSS Modules (with 
      <code>
        babel-plugin-react-css-modules
      </code>
      );
    </li>
    <li>
      Redux with Flex Standard Actions, redux-promise middleware, and a custom pattern of server-side data fetching;
    </li>
    <li>
      SCSS styles;
    </li>
    <li>
      Topcoder API v2 and v3 service (see 
      <code>
        /src/shared/services/api.js
      </code>
      ), with support of TC authentication (look for auth tokens either in 
      <code>
        store.auth
      </code>
       of Redux store, or in 
      <code>
        v3jwt
      </code>
       and 
      <code>
        tcjwt
      </code>
       cookies of the front-end requests to the server);
    </li>
    <li>
      Stylefmt;
    </li>
    <li>
      Stylelint for SCSS (standard Stylelint style, run with 
      <code>
        $ npm run lint:scss
      </code>
      ;
    </li>
    <li>
      Webpack;
    </li>
  </ul>
  <h3>
    Main Topcoder website
  </h3>
  <ul>
    <li>
      <strong>
        Challenge Details Page
      </strong>
       is available at the endpoint 
      <code>
        /challenges/:challengeId
      </code>
      .
      <br />
      Here are some demo links valid in 
      <strong>
        production
      </strong>
       environment:
      <br />
      ‌
      <Link
        replace={false}
        to="/challenges/30058637"
      >
        data science challenge
      </Link>
      , ‌
      <Link
        replace={false}
        to="/challenges/30058473"
      >
        code challenge
      </Link>
      , ‌
      <Link
        replace={false}
        to="/challenges/30058433"
      >
        design challenge
      </Link>
      , ‌
      <Link
        replace={false}
        to="/challenges/30058529"
      >
        design challenge 2
      </Link>
      , ‌
      <Link
        replace={false}
        to="/challenges/30058281"
      >
        design challenge 3
      </Link>
      , ‌
      <Link
        replace={false}
        to="/challenges/30057690"
      >
        design challenge 4
      </Link>
      .
      <br />
      Here are some demo links valid in 
      <strong>
        development
      </strong>
      ‌ environment:
      <br />
      ‌
      <Link
        replace={false}
        to="/challenges/30049604"
      >
        data science challenge
      </Link>
      , ‌
      <Link
        replace={false}
        to="/challenges/30050680"
      >
        code challenge
      </Link>
      , ‌
      <Link
        replace={false}
        to="/challenges/30050463"
      >
        code challenge 2
      </Link>
      , ‌
      <Link
        replace={false}
        to="/challenges/30049552"
      >
        design challenge
      </Link>
      , ‌
      <Link
        replace={false}
        to="/challenges/30050696"
      >
        design challenge 2
      </Link>
      .
    </li>
    <li>
      <Link
        replace={false}
        to="/my-dashboard"
      >
        Dashboard
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/challenges"
      >
        Main Challenge Listing
      </Link>
    </li>
    <li>
      Public Profile Page available at the 
      <code>
        /members/:handle
      </code>
       endpoint. Valid link on dev 
      <Link
        replace={false}
        to="/members/TonyJ"
      >
        here.
      </Link>
    </li>
    <li>
      Stand-alone terms of use page: ‌
      <Link
        replace={false}
        to="/challenges/terms/detail/21193"
      >
        simple
      </Link>
      , ‌
      <Link
        replace={false}
        to="/challenges/terms/detail/21153"
      >
        DocuSign
      </Link>
      .
    </li>
    <li>
      <a
        href="/challenges/30050696/my-submissions"
      >
        Submission Management Page
      </a>
       – generally available at the endpoint 
      <code>
        /challenges/:challengeId/my-submissions
      </code>
      ; the link here leads to a test challenge.
    </li>
    <li>
      <Link
        replace={false}
        to="/settings/profile"
      >
        Settings Profile Page
      </Link>
    </li>
  </ul>
  <h3>
    TCO Assets
  </h3>
  <ul>
    <li>
      <Link
        replace={false}
        to="/hall-of-fame/tco"
      >
        TCO Hall of Fame
      </Link>
    </li>
    <li>
      TCO Scoreboard demo is mounted on 
      <code>
        /scoreboard/:id
      </code>
      , where 
      <code>
        :id
      </code>
       is the competition ID, not related to the regular challenge IDs. Here are two demo links for the scoreboards for the competitions created by the scoreboard init script: ‌
      <Link
        replace={false}
        to="/scoreboard/123"
      >
        ID = 123
      </Link>
      , ‌
      <Link
        replace={false}
        to="/scoreboard/1234"
      >
        ID = 1234
      </Link>
      .
    </li>
  </ul>
  <h3>
    Separate Topcoder Communities
  </h3>
  <ul>
    <li>
      <Link
        replace={false}
        to="/community/blockchain"
      >
        Blockchain Community
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/community/cognitive"
      >
        Cognitive Community
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/community/community-2"
      >
        Community 2
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/community/cs"
      >
        CS community
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/community/demo-expert"
      >
        Demo Expert Community
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/community/qa"
      >
        QA Community
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/community/srmx"
      >
        SRMX Community
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/community/taskforce"
      >
        Taskforce community
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/community/tc-prod-dev"
      >
        Topcoder Product Development community
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/community/wipro"
      >
        TopGear (Wipro) community
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/community/veterans"
      >
        Veterans Community
      </Link>
    </li>
  </ul>
  <h3>
    Previews of Contentful Components
  </h3>
  <ul>
    <li>
      <Link
        replace={false}
        to="/examples/contentful/banner/5il6oFtWp2Ua6WGs60M2mK"
      >
        <code>
          Banner
        </code>
      </Link>
    </li>
  </ul>
  <h3>
    Sandbox
  </h3>
  <p>
    The right place to put any experimental and proof-of-concept stuff.
  </p>
  <ul>
    <li>
      <Link
        replace={false}
        to="/sandbox/cms/dashboard/announcements"
      >
        A simple list of all published dashboard announcements.
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/sandbox/cms/testing"
      >
        CMS-related testing.
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/sandbox/payments"
      >
        Payments PoC
      </Link>
    </li>
  </ul>
  <h3>
    Misc Examples
  </h3>
  <ul>
    <li>
      <Link
        replace={false}
        to="/examples/announcement/5yaVZtOH9CYoQ0QYQk0uoY"
      >
        Announcement
      </Link>
       — This is a part of simple PoC for CMS integration (Countentful CMS is the currently tested option);
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/buttons/"
      >
        Buttons
      </Link>
       — Demo/test of standard buttons already available in the code, and customizable with help of 
      <code>
        react-css-themr
      </code>
      .
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/carousel"
      >
        Carousel
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/code-splitting"
      >
        Code Splitting
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/color-mixins"
      >
        Color Mixins
      </Link>
       — Live demo of TC UI Kit color pallete;
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/css-modules"
      >
        CSS Modules
      </Link>
       - Demo/test of CSS modules in action;
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/data-fetch"
      >
        Data Fetch
      </Link>
       - Demonstrates how data fetching should be implemented in isomorphic way, using Redux with Flux Standard Actions and promise;
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/editor"
      >
        Editor
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/error-message"
      >
        Error Message
      </Link>
       - Demonstrates UI component for errors messaging;
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/fonts-test"
      >
        Fonts Test
      </Link>
       - A simple showcase of the fonts included into this repo, and the test of their proper inclusion into the bundle;
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/link-test"
      >
        Link Test
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/loading-indicators"
      >
        Loading Indicators
      </Link>
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/scalable-rect"
      >
        ScalableRect
      </Link>
       component makes it easy to create dynamically scaled components with fixed side ratio.
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/svg-loading"
      >
        SVG Loading
      </Link>
       - Shows how to load 
      <code>
        .svg
      </code>
       assets with use of 
      <code>
        babel-plugin-inline-react-svg
      </code>
      .
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/tags/"
      >
        Tags
      </Link>
       - Demo/test of standard tags already available in the code, and customizable with help of 
      <code>
        react-css-themr
      </code>
      .
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/themr"
      >
        Super Themr
      </Link>
       - Test/demo of
      <code>
        react-css-super-themr
      </code>
      .
    </li>
    <li>
      <Link
        replace={false}
        to="/examples/typography"
      >
        Typography
      </Link>
       - Most of Topcoder websites use the same styleguide for the design. In particular, all typography is supposed to use the set of styles from this example. For all these styles we have global mixins, which should be used whenever possible (but never modified without explicit approval).
    </li>
  </ul>
</div>
`;
